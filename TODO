- [ ] Healthcheck tools
  - [ ] Add a "HEALTHCHECK" command, which returns information for the container's healthcheck.
    - [ ] Queue can be reached.
    - [ ] Configuration source can be reached.
    - [ ] Listening on socket.
- [ ] Startup validation.
- [ ] Check for correct state at the start of commands.
- [ ] Use a `sensitiveCommandRunning` flag to prevent race conditions when a
  connection attempts two `APPEND`s at once, for instance.
- [ ] Commands:
  - [ ] AUTHENTICATE (hard)
  - [ ] STATUS = "STATUS" SP mailbox SP "(" status-att *(SP status-att) ")"
    - [ ] status-att = "MESSAGES" / "RECENT" / "UIDNEXT" / "UIDVALIDITY" / "UNSEEN"
  - [ ] APPEND (hard)
  - [ ] SEARCH (very hard)
  - [ ] FETCH (hard)
  - [ ] STORE (medium)
  - [ ] COPY (medium)
  - [ ] UID ?
- [ ] Add environment variable for signing up an account for the email list
- [ ] Address Potential Concurrency Issues:
  - [ ] Multiple socket writes at the same time.
- [ ] Start-up checks:
  - [ ] Confirm that all integers are safe.
  - [ ] Confirm that all command names are atoms.
- [ ] Check `toString()` occurrences for UTF decoding safety.
  - [ ] Flag safe ones with #UTF_SAFE comments.
- [x] Make sure that `Scanner.skipLine()` waits until a new line comes in to skip ahead.
- [ ] Limit everything:
  - [ ] Maximum commands per minute.
  - [ ] Time since last command.
  - [x] Maximum command lexemes.
  - [ ] Errors per minute.
  - [ ] Average TCP data chunk size (to prevent slow loris attacks)
  - [ ] Average line length.
  - [ ] Authentication attempts per hour should be handled by the authorizer.
- [ ] Options:
  - [ ] Console verbosity
  - [ ] Events queue verbosity
  - [ ] Single account
  - [ ] Simple Authorization